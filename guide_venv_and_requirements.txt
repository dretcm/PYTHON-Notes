------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------ " pip install -r requirements.txt "-------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------

information about pip: https://www.neoguias.com/como-instalar-pip-python/#Como_instalar_PIP_en_Windows
good video for this guide: https://www.youtube.com/watch?v=APOPm01BVrk

# and for .exe = https://nitratine.net/blog/post/issues-when-using-auto-py-to-exe/

1 ----------------->>>>> virtual environments:

# create a env with conda:
conda create --name pandas_tuto python=x.x

* open cmd and go to the path of preference for the project, e.g:

C:\users> cd test\etc...

* and put the next command line, first "conda activate base":

C:\users\test\project>conda activate base

(base) C:\users\test\project>python -m venv project_test_venv

# or with version: python -m venv blender python=3.5.0

* and then we go to put our project_test_venv\scripts...

(base) C:\users\test\project>project_test_venv\scripts\activate.bat

* and if we put pip list we will see the current modules

(project_test_venv) (base) project_test_venve>pip list

Package    Version
---------- -------
pip        19.2.3
setuptools 41.2.0

* and now we can install packages or modules in our environments system e.g:

pip install numpy
pip install keras

1.2 --------------->>>> activate and desactivate virtual environment : pip update :

# file wherwe you create your environment

C:\users\test\project>project_test_venv\scripts\activate.bat


# or 'conda activate' or more espesific 'conda activate [you environment]'

C:\users\usuarios>conda activate [you environment]


# and update you pip, if later happens a mistake as "Why Anaconda\Scripts\pip-script.py is not present " use "easy_install pip".

(base) C:\users\usuarios>pip install --upgrade pip


# 'deactivate' or 'conda deactivate' according you env:

(base) C:\users\usuarios>deactivate

(base) C:\users\usuarios>conda deactivate

2 ----------------->>>> virtual environments with all packages of system

C:\users\test\project>python -m venv project_venv --system-site-packages

3 ----------------->>>>> first steps for requirements

* create a file.txt with the name "requirements.txt"
* add modules of python whit the version e.g: numpy==1.20.0

-> e.g:
--------------requirements.txt--------------
numpy==1.20.0
pandas==1.2.1
--------------------------------------------

# we go to our path in cmd and activate our virtual env and install the modules:

C:\users\test\project>project_test_venv\scripts\activate.bat

(base) C:\users\test\project>pip install -r requirements.txt

4 ----------------->>>>> pip list

* use 'pip list' in cmd for showing the modules installed in your system.
* if you moving to certain or sure path, it'll only show the modules in this path.

->e.g:
C:\users\test\etc...> pip list --local

numpy               1.20.0
pandas              1.2.1
matplotlib	    3.3.4
etc..

* remember that if you want to see the modules created by your virtual environment you must activate the environment

* and then we go to put our project_test_venv\scripts...

(base) C:\users\test\project>project_test_venv\scripts\activate.bat

* and to desactivate use:

(base) C:\users\test\project>deactivate

5 ----------------->>>>> copy all modules in the path:

* use 'pip freeze > requirements_all.txt'

* this makes that copy all modules in the path in a file.txt where we can choose the name of file. e.g: 
'requirements_all.txt'
'requirements_copy.txt'
'requirements123.txt'
etc.

* and 'pip freeze' for returning all modules

6 ----------------->>>  uninstall packages:

pip uninstall [numpy, pandas, etc] # you choose the package.

* if the console ask or request a confirmate we will use:

pip uninstall -y [numpy, pandas, etc]

* also we can use the requirements:

pip uninstall -y -r requirements.txt

7 ----------------->>> pyinstaller:

## first step:
#in cmd:

>activate main
>pip install pyinstaller

## second step:

# -F or --onefile : create a file for the app
# -w : no console
# -i : set the icon

>pyinstaller -w -F -i path\you_image.ico path\you_script.py

# or

>pyinstaller --onefile -w -i path\you_image.ico path\you_script.py

# example:

>pyinstaller --onefile -w -i D:\CODIGOS\2021\app\ahora\yasu.ico D:\CODIGOS\2021\app\ahora\crear.py

pyinstaller --noconfirm --onefile --console --icon "D:/CODIGOS/2021/app/ahora/yasu.ico" --add-data "D:/CODIGOS/2021/app/ahora/youtube.py;." --add-data "D:/CODIGOS/2021/app/ahora/interface_yt.ui;." --add-data "D:/CODIGOS/2021/app/ahora/env;env/"  "D:/CODIGOS/2021/app/ahora/main.py"

## other form will be:

> python -m pip install auto-py-to-exe

# or
> pip install auto-py-to-exe

# and type in cmd or shell_

>auto-py-to-exe

8 ----------------->>> # Call environments from file.batch : Use call :

call activate [my_env]
python my_script.py
call conda deactivate

# example:

echo BEGIN PROGRAM ...

cd D:codigos\2021\app\ahora
D:

call env\scripts\activate.bat

python main.py

call deactivate

echo FINISH

9 ----------------->>> Create .exe of script without pyinstaller : .pyw

# source: https://www.youtube.com/watch?v=5ykxJjXeAjM

The PYW file type is primarily associated with Python by Python Software Foundation. 
PYW files are used in Windows to indicate a script needs to be run using PYTHONW. EXE instead 
of PYTHON. EXE in order to prevent a DOS console from popping up to display the output.

# 1. save the script as [name script].pyw
# 2. click the script.pyw and enjoy it.

10 ----------------->>> pip with user : ensurepip : update :

python -m ensurepip
python -m pip install --upgrade pip --user
python -m pip install opencv-python opencv-contrib-python imutils numpy dlib --user

11 ----------------->>> mklink :
# i believe that this create a access direct, use cmd in mode administrator.
# create to link or connection strengh with windows.

mklink /j python D:\programs\blender_packages\blender   # blender is a environment

12 ----------------->>> to install packages in blender:

# search his prefix:
import sys
sys.prefix

# open cmd and go directory:

cd C:\Program Files\Blender Foundation\Blender\2.80\python\
cd bin

# finally:

python -m ensurepip
python -m pip install numpy



# best guide:

C:\Users\USUARIO> cd C:\Program Files\Blender Foundation\Blender\2.80\python\bin

C:\Program Files\Blender Foundation\Blender\2.80\python\bin> python.exe -m pip install sounddevice 

13 ----------------->>> pip install for pygame :

1)> pip install pyinstaller
2)> pyinstaller
3)> pip.exe
4)> cd D:\my_games\poryect
5)> pyinstaller main.py --onefile --noconsole

14 ----------------->>>